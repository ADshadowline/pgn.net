{"name":"pgn.net","tagline":"Portable Game Notation (PGN) implementation in .NET","body":"pgn.net\r\n=======\r\n\r\nPortable Game Notation (PGN) implementation in .NET\r\n\r\n## About PGN\r\n\r\nRead more about [PGN on Wikipedia](http://en.wikipedia.org/wiki/Portable_Game_Notation).\r\n\r\nHere is an excellent [spec document](http://www.saremba.de/chessgml/standards/pgn/pgn-complete.htm).\r\n\r\n\r\n## About pgn.NET\r\n\r\npgn.NET is a library which can be used to handle chess games and read/write them in the PGN format. It is implemented in F# and C# and uses [FParsec](http://www.quanttec.com/fparsec/).\r\n\r\nTo support as many .pgn file formats as possible the parsers try to be as tolerant as possible. It mostly conforms to [this specs](http://www.saremba.de/chessgml/standards/pgn/pgn-complete.htm).\r\nHowever, other than the specification says we use UTF-8 as encoding, cause it's the 21st century.\r\n\r\n## How To Use\r\n\r\n``` csharp\r\n//READ FILE\r\nvar reader = new PgnReader();\r\nvar gameDb = reader.ReadFromFile(\"Tarrasch.pgn\");\r\n\r\nGame game = gameDb.Games[0];\r\n\r\nConsole.WriteLine(game);\r\n```\r\n\r\n\r\n## How To Contribute\r\n\r\n1. Fork\r\n1. Clone\r\n1. Code\r\n1. Create Pull Request\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}